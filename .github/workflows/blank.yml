name: Xenia CI

on:
  schedule:
    - cron: "0 0 */7 * *"
  push:
    branches: [ main ]
    paths-ignore: [ '**/README.md' ]
  pull_request:
    branches: [ main ]
    paths-ignore: [ '**/README.md' ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Flatpak and Dependencies
        run: |
          sudo apt update
          sudo apt install --no-install-recommends -y \
            build-essential \
            cmake \
            strace \
            patchelf \
            curl \
            wget \
            git \
            llvm \
            mesa-utils \
            vulkan-tools \
            xorg-dev \
            python3 \
            python3-pip \
            python3-setuptools \
            python3-wheel \
            flatpak \
            flatpak-builder \
            libglib2.0-dev \
            libvulkan-dev \
            libssl-dev

      - name: Setup Flatpak Builder Environment
        run: |
          flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
          flatpak update --appstream --assumeyes

      - name: Build Xenia Flatpak
        run: |
          # Build the Flatpak using flatpak-builder
          flatpak-builder --user --install --force-clean --repo=repo build-dir com.xenia.Xenia.json

      - name: Verify Build
        run: |
          flatpak list --app
          flatpak info com.xenia.Xenia

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4.4.3
        with:
          name: Flatpak
          path: 'repo/*.flatpak'

      - name: Upload version file
        uses: actions/upload-artifact@v4.4.3
        with:
          name: version
          path: ~/version

  release:
    needs: [build]
    permissions: write-all
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v4.1.8
        with:
          name: Flatpak
      - uses: actions/download-artifact@v4.1.8
        with:
          name: version

      - name: Read version
        run: |
          cat version
          export VERSION="$(<version)"
          echo "APP_VERSION=${VERSION}" >> "${GITHUB_ENV}"

      - name: Del Previous Release
        run: |
          gh release delete "${APP_VERSION}" --repo "${GITHUB_REPOSITORY}" --cleanup-tag -y
        env:
          GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        continue-on-error: true

      - name: Continuous Releaser
        uses: softprops/action-gh-release@v2
        with:
          name: "Xenia Flatpak ${{ env.APP_VERSION }}"
          tag_name: "${{ env.APP_VERSION}}"
          prerelease: false
          draft: false
          generate_release_notes: false
          make_latest: true
          files: |
            *.flatpak*

      - name: Get Date
        run: |
          SNAPSHOT_TAG="$(date --utc +'%Y%m%d-%H%M%S')"
          echo SNAPSHOT_TAG="${SNAPSHOT_TAG}" >> "${GITHUB_ENV}"
        continue-on-error: false

      - name: Snapshot Releaser
        uses: softprops/action-gh-release@v2
        with:
          name: "Snapshot ${{ env.APP_VERSION }}"
          tag_name: "${{ env.SNAPSHOT_TAG }}"
          prerelease: false
          draft: false
          generate_release_notes: false
          make_latest: false
          files: |
            *.flatpak*
        continue-on-error: false
